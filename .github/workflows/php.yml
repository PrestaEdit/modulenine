
name: PHP tests
on: [workflow_dispatch, pull_request]
jobs:
  php-linter:
    name: PHP Syntax check
    strategy:
      matrix:
        php-versions: [
          '7.1',
          '7.2',
          '7.3',
          '7.4',
          '8.0',
          '8.1',
          '8.2',
          '8.3',
          '8.4',
        ]
    continue-on-error: true
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: PHP syntax checker ${{ matrix.php-versions }}
        uses: prestashop/github-action-php-lint/${{ matrix.php-versions }}@master

  php-cs-fixer:
    name: PHP-CS-Fixer
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Run PHP-CS-Fixer
        uses: prestashopcorp/github-action-php-cs-fixer@master
        with:
          other-cmds: '--config=.php-cs-fixer.dist.php'

  # Run PHPStan against the module and a PrestaShop release
  phpstan:
    name: PHPStan
    runs-on: ubuntu-latest
    strategy:
      matrix:
        presta-versions: ['1.7.8', '8.1.7']
    steps:
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '7.4'

      - name: Checkout
        uses: actions/checkout@v3.1.0

      # Add vendor folder in cache to make next builds faster
      - name: Cache vendor folder
        uses: actions/cache@v3
        with:
          path: vendor
          key: php-${{ hashFiles('composer.lock') }}

      # Add composer local folder in cache to make next builds faster
      - name: Cache composer folder
        uses: actions/cache@v3
        with:
          path: ~/.composer/cache
          key: php-composer-cache

      - run: composer install

      # Docker images prestashop/prestashop may be used, even if the shop remains uninstalled
      - name: Execute PHPStan on PrestaShop (Tag ${{ matrix.presta-versions }})
        run: chmod +x ./tests/phpstan.sh && ./tests/phpstan.sh ${{ matrix.presta-versions }}

  phpstan-v9:
    name: PHPStan
    runs-on: ubuntu-latest
    strategy:
      matrix:
        presta-versions: ['9.0.0-alpha.1']
    steps:
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1'

      - name: Checkout
        uses: actions/checkout@v3.1.0

      # Add vendor folder in cache to make next builds faster
      - name: Cache vendor folder
        uses: actions/cache@v3
        with:
          path: vendor
          key: php-${{ hashFiles('composer.lock') }}

      # Add composer local folder in cache to make next builds faster
      - name: Cache composer folder
        uses: actions/cache@v3
        with:
          path: ~/.composer/cache
          key: php-composer-cache

      - run: composer install

      # Docker images prestashop/prestashop may be used, even if the shop remains uninstalled
      - name: Execute PHPStan on PrestaShop (Tag ${{ matrix.presta-versions }})
        run: chmod +x ./tests/phpstan-v9.sh && ./tests/phpstan-v9.sh ${{ matrix.presta-versions }}
